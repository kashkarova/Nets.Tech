@page "/"
@using System.Net.WebSockets;
@using System.Text;

<h4>Connect to the server:</h4>
<input @bind="WebSocketServer"/>
<button @onclick=ConnectToServerAsync>Connect</button>

<h4>Message</h4>
<input type="text" @oninput="e => OnTextChangedAsync(e)" @bind="Message" />


@code {

    public string Message = string.Empty;
    public string WebSocketServer = "wss://localhost:7186/ws";


    private ClientWebSocket _clientWebSocket = new ClientWebSocket();

    private async Task ConnectToServerAsync()
    {
        try
        {
            await _clientWebSocket.ConnectAsync(new Uri(WebSocketServer), default);          
            ReceiveMessageAsync();
        }
        catch(Exception ex)
        {
            await _clientWebSocket.CloseOutputAsync(WebSocketCloseStatus.EndpointUnavailable, string.Empty, default);
        }
    }

    private async Task ReceiveMessageAsync()
    {
        WebSocketReceiveResult result;
        do
        {
            var buffer = new ArraySegment<byte>(new byte[1024]);

            result = await _clientWebSocket.ReceiveAsync(buffer, default);
            Message = Encoding.UTF8.GetString(buffer).Trim('\0');

            StateHasChanged();
        } while (_clientWebSocket.State == WebSocketState.Open && result.MessageType == WebSocketMessageType.Text);

        await _clientWebSocket.CloseOutputAsync(WebSocketCloseStatus.NormalClosure, _clientWebSocket.CloseStatusDescription, CancellationToken.None);
    }

    private async Task OnTextChangedAsync(ChangeEventArgs e)
    {
        var buffer = Encoding.UTF8.GetBytes(e.Value.ToString().Trim('\0'));
        var arraySegment = new ArraySegment<byte>(buffer);

        try
        {
            await _clientWebSocket.SendAsync(arraySegment, WebSocketMessageType.Text, true, default);
        }
        catch(Exception ex)
        {
            await _clientWebSocket.CloseOutputAsync(WebSocketCloseStatus.InvalidMessageType, string.Empty, default);
        }
    }
}